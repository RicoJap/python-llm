from playwright.sync_api import sync_playwright

import re

# Remove code blocks from JSON string that gets generated by OpenAI
def clean_json_string(json_string):
    return re.sub(r'```json|```', '', json_string).strip()


# Scrape website using Playwright and remove unnecessary elements such as scripts, iframes, noscripts, and styles
# but keep the structure of the HTML intact
# Also minified the scraped HTML by removing whitespaces, newlines, tabs, and carriage returns
def scrape_website(url):
    with sync_playwright() as p:
        # Start a browser session
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        # page.set_default_timeout(60000)

        try:
            # Navigate to the webpage
            page.goto(url, wait_until="networkidle")

            # Click the elements to get the dynamic content (using miss-paris website example)
            # click_element(page, "#course_198")
            # click_element(page, "#prefecture")
            # click_dropdown_option(page, "#prefecture", "千葉県")

            html = page.evaluate(
                '''
                () => {
                    document.querySelectorAll('script, iframe, noscript, style').forEach((el) => {
                      if (el.tagName.toLowerCase() === 'script') {
                          // Remove script entirely
                          el.remove();
                      } else {
                          // Replace other elements with their children
                          const parent = el.parentNode;
                          while (el.firstChild) {
                              parent.insertBefore(el.firstChild, el);
                          }
                          parent.removeChild(el);
                      }
                  });
                  
                  // Minify the HTML
                  return document.body.outerHTML
                      .replace(/>\\s+</g, '><') // Remove spaces between tags
                      .replace(/\\n|\\t|\\r/g, '') // Remove newlines, tabs, and carriage returns
                      .replace(/\\s{2,}/g, ' ') // Replace multiple spaces with one
                      .trim(); // Trim leading/trailing whitespace
                  }
            '''
            )
            
            return html
        
        except Exception as e:
            print("Error:", e)
        
        finally:
            browser.close()
     
# Click an element by its CSS selector, could be used to get the next button
def click_element(page, css_selector):
  try:
      # Wait for the element to be visible and enabled for interaction
      page.wait_for_selector(css_selector, state="visible")
      # Click the element
      page.click(css_selector, force=True)
      print(f"Clicked element with selector: {css_selector}")
  except Exception as e:
      print(f"Error clicking element with selector '{css_selector}': {e}")

# Click a dropdown option, typically <option /> from <select /> element
# Cannot click options inside <select /> element using click_element() function
def click_dropdown_option(page, css_selector, value):
  try:
      # Wait for the element to be visible and enabled for interaction
      page.wait_for_selector(css_selector, state="visible")
      # Click the element
      page.select_option(css_selector, value=value)
      print(f"Selected option '{value}' from dropdown with selector: {css_selector}")
  except Exception as e:
      print(f"Error selecting option '{value}' from dropdown with selector '{css_selector}': {e}")